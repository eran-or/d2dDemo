import { useEffect, useRef, useState } from "react";
import { useShapeDrawing } from "./shape_drawing/useShapeDrawing";
import { FileInput } from "./FileInput";
import { resizeImage } from './helpers'
import { Shape } from './shape_drawing/types'

export interface ShapeDrawerProps {
  onShapeCreated: (shape: Shape) => void;
}

// Canvas for displaying the uploaded image and drawing the shape
export const DrawingCanvas: React.FC<ShapeDrawerProps> = ({ onShapeCreated }) => {
  const [image, setImage] = useState<HTMLImageElement | null>(null);
  const canvasRef = useRef<HTMLCanvasElement | null>(null);
  const {
    handleMouseDown,
    handleMouseUp,
    handleMouseMove,
    undoLastShape
  } = useShapeDrawing(canvasRef, image, onShapeCreated);

  useEffect(() => {
    if (!canvasRef.current || !image) return;
    const context = canvasRef.current.getContext('2d');
    if (!context) return;

    const { newWidth, newHeight } = resizeImage(image, 500, 500, 100, 100);
    canvasRef.current.width = newWidth;
    canvasRef.current.height = newHeight;
    context.drawImage(image, 0, 0, newWidth, newHeight);

  }, [canvasRef, image]);
  
  const handleFileChange = (file: File) => {
    const reader = new FileReader();
    reader.onload = (e) => {
      const img = new Image();
      img.src = e.target?.result as string;
      img.onload = () => {
        setImage(img);
      };
    };
    reader.readAsDataURL(file);
  };
  
  return (
    <div>
      <FileInput onFileChange={handleFileChange} />
      <button onClick={undoLastShape}>Undo Last Shape</button>
      <canvas
        ref={canvasRef}
        width={500}
        height={500}
        onMouseDown={handleMouseDown}
        onMouseMove={handleMouseMove}
        onMouseUp={handleMouseUp}
      />
    </div>
  );
};
